# not testing the latest of activerecord in this suite because
# mysql2 has issues with newer Rubies

# don't change the first index to a number ending in other than zero
# it is used by jbdc_version
ACTIVERECORD_VERSIONS = [
  ['5.2.0', 2.2, 2.6],
  ['5.1.0', 2.2, 2.5],
  ['5.0.0', 2.2, 2.4],
  ['4.2.0', 2.2, 2.3],
  ['4.1.0', 2.2, 2.3],
  ['4.0.0', 2.2, 2.3],
  ['3.2.0', 2.2, 2.2]
]

def jbdc_version(activerecord_version)
  return unless RUBY_PLATFORM.eql?('java') || activerecord_version.nil?
  # remove the '.' between the major and minor versions
  activerecord_version[1] = ''
  activerecord_version
end

def mysql2_version(activerecord_version)
  return if activerecord_version.nil?
  if activerecord_version.include?('5')
    '0.4.4'
  else
    '0.3.21'
  end
end

def mysql_gem(activerecord_version)
  if RUBY_PLATFORM.eql?('java')
    "gem 'activerecord-jbdcmysql-adapter'#{add_twiddle_wakka(jbdc_version(activerecord_version))}"
  else
    "gem 'mysql2'#{add_twiddle_wakka(mysql2_version(activerecord_version))}"
  end
end

def minitest_version(rails_version = nil)
  if rails_version && rails_version.include?('4.0')
    '4.2.0'
  else
    '5.2.3'
  end
end

def rack_version
  '2.1.4.1' if RUBY_VERSION < '2.3.0'
end

def gem_list(activerecord_version = nil)
  <<-RB
    gem 'rack'#{rack_version}
    gem 'minitest'#{minitest_version}
    gem 'activerecord'#{activerecord_version}
    #{mysql_gem(activerecord_version)}
  RB
end

create_gemfiles(ACTIVERECORD_VERSIONS, gem_list)
