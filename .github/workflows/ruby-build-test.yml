name: Build me a Ruby
on: push

jobs:
  ruby-build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-18.04 ]
        ruby-version: [ "2.0.0-p648" ]
        # ruby-version: [ "2.3.0", "2.3.1", "2.3.2", "2.3.3", "2.3.4", "2.3.5", "2.3.6", "2.3.7", "2.3.8" ]
    runs-on: ${{ matrix.os }}
    env:
      LANG: C.UTF-8
      RUBY_CONFIGURE_OPTS: --enable-shared --disable-install-doc
      CPPFLAGS: "-DENABLE_PATH_CHECK=0" # https://github.com/actions/virtual-environments/issues/267
    steps:
    - name: add Ruby to PATH
      run: |
        export PATH="~/.rubies/ruby-${{ matrix.ruby-version }}/bin:$PATH"
        echo "::add-path::~/.rubies/ruby-${{ matrix.ruby-version }}/bin"
        echo $PATH

    - uses: actions/checkout@v2

    - uses: actions/cache@v2
      id: ruby-cache
      with:
        path: ~/.rubies/ruby-${{ matrix.ruby-version }}
        key: v1-ruby-cache-${{ matrix.ruby-version }}-${{ runner.os }}
        restore-keys: |
          v1-ruby-cache-${{ matrix.ruby-version }}-${{ runner.os }}

    - name: Clone ruby-build
      if: steps.ruby-cache.outputs.cache-hit != 'true'
      run: "git clone --branch ruby23-openssl-linux https://github.com/eregon/ruby-build.git $HOME/ruby-build"

    - name: install ruby-build
      if: steps.ruby-cache.outputs.cache-hit != 'true'
      run: sudo $HOME/ruby-build/install.sh && ruby-build --definitions

    - name: apt-get updates
      if: steps.ruby-cache.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends libyaml-dev libgdbm-dev libreadline-dev libncurses5-dev

    - name: build Ruby ${{ matrix.ruby-version }}
      if: steps.ruby-cache.outputs.cache-hit != 'true'
      run: ruby-build --verbose ${{ matrix.ruby-version }} ~/.rubies/ruby-${{ matrix.ruby-version }}

    - name: upgrade rubygems
      if: steps.ruby-cache.outputs.cache-hit != 'true'
      run: gem update --system 3.0.6 --force || (gem i rubygems-update -v '<3' && update_rubygems) 

    - name: Install Bundler if needed
      run: |
        if [ ! -e ~/.rubies/ruby-${{ matrix.ruby-version }}/bin/bundle ]; then
          sudo gem install bundler -v '~> 1' --no-document -â€‹-bindir ~/.rubies/ruby-${{ matrix.ruby-version }}/bin
        fi

    - name: Show versions
      run: |
        sudo rm /usr/bin/ruby /usr/bin/gem 
        echo $PATH
        ls ~/.rubies/**/bin/*
        ruby --version
        ruby -ropenssl -e 'puts OpenSSL::OPENSSL_LIBRARY_VERSION'
        bundle --version
        ls ~/work/newrelic-ruby-agent/*

    - uses: actions/cache@v2
      id: bundler-cache
      with:
        path: |
          ~/.bundle
        key: v1-${{ runner.os }}-${{ matrix.ruby-version }}-bundle-cache-${{ hashFiles('~/work/newrelic-ruby-agent/newrelic_rpm.gemspec') }}
        restore-keys: |
          v1-${{ runner.os }}-${{ matrix.ruby-version }}-bundle-cache-${{ hashFiles('~/work/newrelic-ruby-agent/newrelic_rpm.gemspec') }}

    - name: Bundler install
      if: steps.bundler-cache.outputs.cache-hit != 'true'
      run: |
        bundle install --path ~/.bundle
        cp ~/work/newrelic-ruby-agent/Gemfile.lock ~/.bundle/

    - name: Restore Gemfile.lock
      if: steps.bundler-cache.outputs.cache-hit = 'true'
      run: cp  ~/.bundle/Gemfile.lock ~/work/newrelic-ruby-agent/

    - name: Show Gemfile
      run: |
        ls ~/work/newrelic-ruby-agent/*

    - name: Run unit tests
      run: |
        bundle list
        bundle exec ruby --version
        # bundle exec rake test

