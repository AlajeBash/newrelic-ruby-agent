name: Build me a Ruby
on: push

jobs:
  ruby-install-build:
    if: false
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        ruby: [ ruby-2.6.6 ]
    runs-on: ${{ matrix.os }}
    env:
      LANG: C.UTF-8
    steps:
    - uses: actions/checkout@v2
    - name: Set tag name
      id: info
      run: |
        tag=enable-shared
        echo "::set-output name=tag::$tag"
    - name: Clone ruby-install
      run: git clone https://github.com/postmodern/ruby-install.git
    - name: Install ruby-install
      run: make install
      working-directory: ./ruby-install

    - name: List versions
      run: ruby-install

      # Install packages
    - run: apt-get update
      if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.ruby, 'ruby-')
    - run: apt-get install -y --no-install-recommends libyaml-dev libgdbm-dev libreadline-dev libncurses5-dev
      if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.ruby, 'ruby-')

    - name: Build Ruby
      run: ruby-install --no-install-deps -j4 ${{ matrix.ruby }} -- --enable-shared --disable-install-doc
      env:
        CPPFLAGS: "-DENABLE_PATH_CHECK=0" # https://github.com/actions/virtual-environments/issues/267
    - name: Install Bundler if needed
      run: |
        if [ ! -e ~/.rubies/${{ matrix.ruby }}/bin/bundle ]; then
          export PATH="$HOME/.rubies/${{ matrix.ruby }}/bin:$PATH"
          gem install bundler -v '~> 1' --no-document
        fi

    - name: Show versions
      run: |
        ruby --version
        bundle --version
        bundle exec rake --version
    - name: Bundler install
      run: bundle install

    - name: Run unit tests
      run: bundle exec rake test

  # Ruby <= 2.3 needs OpenSSL 1.0.2 which cannot be installed on Ubuntu 16.04 and macos-latest.
  # To workaround that, we use ruby-build which builds its own OpenSSL.
  ruby-build:
    if: true
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-18.04 ]
        ruby-version: [ "2.0.0-p648" ]
        # ruby-version: [ "2.3.0", "2.3.1", "2.3.2", "2.3.3", "2.3.4", "2.3.5", "2.3.6", "2.3.7", "2.3.8" ]
    runs-on: ${{ matrix.os }}
    env:
      LANG: C.UTF-8
      RUBY_CONFIGURE_OPTS: --enable-shared --disable-install-doc
      CPPFLAGS: "-DENABLE_PATH_CHECK=0" # https://github.com/actions/virtual-environments/issues/267
    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v2
      id: build-ruby
      with:
        path: $HOME/.rubies/ruby-${{ matrix.ruby-version }}
        key: build-ruby-${{ matrix.ruby-version }}-${{ runner.os }}
        restore-keys: |
          build-ruby-${{ matrix.ruby-version }}-${{ runner.os }}

    - name: Clone ruby-build
      if: steps.build-ruby.outputs.cache-hit != 'true'
      run: "git clone --branch ruby23-openssl-linux https://github.com/eregon/ruby-build.git $HOME/ruby-build"

    - name: install ruby-build
      if: steps.build-ruby.outputs.cache-hit != 'true'
      run: sudo $HOME/ruby-build/install.sh && ruby-build --definitions

    - name: apt-get updates
      if: steps.build-ruby.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends libyaml-dev libgdbm-dev libreadline-dev libncurses5-dev

    - name: build Ruby ${{ matrix.ruby-version }}
      if: steps.build-ruby.outputs.cache-hit != 'true'
      run: ruby-build --verbose ${{ matrix.ruby-version }} $HOME/.rubies/ruby-${{ matrix.ruby-version }}
 
    - name: add Ruby to PATH
      run: |
        export PATH="$HOME/.rubies/ruby-${{ matrix.ruby-version }}/bin:$PATH"
        echo "::add-path::$HOME/.rubies/ruby-${{ matrix.ruby-version }}/bin"

    - name: Install Bundler if needed
      run: |
        if [ ! -e ~/.rubies/ruby-${{ matrix.ruby-version }}/bin/bundle ]; then
          sudo gem install bundler -v '~> 1' --no-document
        fi

    - name: Show versions
      run: |
        ruby --version
        ruby -ropenssl -e 'puts OpenSSL::OPENSSL_LIBRARY_VERSION'
        bundle --version
        ls ~/work/newrelic-ruby-agent/*

    - uses: actions/cache@v2
      id: bundler
      with:
        path: |
          ~/.bundle
        key: ${{ runner.os }}-${{ matrix.ruby-version }}-bundle-cache-${{ hashFiles('~/work/newrelic-ruby-agent/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.ruby-version }}-bundle-cache-${{ hashFiles('~/work/newrelic-ruby-agent/Gemfile.lock') }}

    - name: Bundler install
      run: bundle install --path ~/.bundle

    - name: Show Gemfile
      run: |
        ls ~/.bundle/*
        ls ~/.bundle/**/*

    - name: Run unit tests
      run: |
        bundle list
        # bundle exec rake test

